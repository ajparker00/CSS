body {
  background: linear-gradient(
    to bottom,
    rgb(188, 143, 143),
    rgba(188, 143, 143, 0.25)
  );
  font-size: 1.15em;
  text-align: justify;
  font-family: 'Lato', sans-serif;
}

#title {
  color: rgb(186, 133, 9);
  font-family: 'Sarabun', sans-serif;
}

.subtitle {
  color: rgb(200, 145, 30);
  font-family: 'Sarabun', sans-serif;
}

#service-image {
  height: 400px;
  width: 70vw;

  background: radial-gradient(circle, red 20%, blue 30%, green 50%);
  border: 5px double rgb(44, 54, 114);
}

.link {
  text-decoration: none;
}

.italics {
  font-style: italic;
}

#about-us-image {
  height: 300px;
  width: 60%;

  border: 5px solid rgb(44, 54, 114);
  padding: 5px 10px 5px 10px;
  margin: 5px 10px;

  float: right;
}

.site-table {
  display: inline-block;
}

/* Flexbox */

/* Flex Items Shrink, Grow and Basis these are completely responsible for the responsive power of Flexbox.
What really makes flexbox what it is today and why it's used so commonly over floats and dispay types. 
Use these item properties to define size of the website on different devices so websites looks good*/

/* Item Properties is the real power of flex box basically changing how items look.  Ex would be positioning in a container. */

/* Flex Basis-defines a minimum width of an flex item.  Can be any value, doesn't have to be a specific number or unit. 
   Flex grow-every flex item is going to get the same amount of extra space unless you set the item otherwise. Good rule of thumb is set all the same
   Flex shrink-defines the rate of shrinking relative to the rest of the items.  Flex shrink is set to 1
*/

.container {
  background-color: rgb(250, 250, 250);
  margin: 10px;
  height: 300px;

  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.container-item {
  background: rgb(36, 130, 39);
  color: white;
  font-size: 25px;
  text-align: center;

  width: 70px;
  line-height: 50px;
  margin: 10px;
}
